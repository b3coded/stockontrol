@model Stockontroll.Models.Produto
@using Stockontroll.DAO;
@using Stockontroll.Models;

@{

    ViewBag.Title = "Create";
    Layout = "~/Areas/Administrador/Views/Shared/_Layout.cshtml";

    Stockontroll.DAO.StockontrolContext db = new StockontrolContext();
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Produto</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Categoria, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Categoria, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Categoria, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Marca, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Marca, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Marca, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Preco, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <small class="text-muted">Use vírgula ao invés de ponto para casas decimais (Ex: 89,99)</small>
            @Html.EditorFor(model => model.Preco, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Preco, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Quantidade, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Quantidade, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Quantidade, "", new { @class = "text-danger" })
        </div>
    </div>
    <!--
    <div class="form-group">
        @Html.LabelFor(model => model.fornecedorId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.fornecedorId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.fornecedorId, "", new { @class = "text-danger" })
        </div>
    </div>
        -->
    <div class="form-group">
        <label class="control-label col-md-2">Fornecedor</label>
        @{List<Fornecedor> f = db.Fornecedores.ToList();}
        <div class="col-md-10">
            <select class="form-control" name="fornecedorId">
                <option>Selecione um Fornecedor</option>
                @foreach (var i in f)
                {
                    <option value="@i.Id">@i.Nome</option>
                }
            </select>
            @Html.ValidationMessageFor(model => model.fornecedorId, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
