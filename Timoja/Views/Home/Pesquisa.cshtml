@model IEnumerable<Stockontroll.Models.Produto>
@using Stockontroll.DAO;
@using Stockontroll.Models;
@{
    ViewBag.Title = "Pesquisa";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}
@{
    Usuario user = (Usuario)Session["Usuario"];
}
<section>
    <div class="container">
        <div class="row">
            <div class="col-sm-12">
                <div class="mb-2">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        <h3 class="section-title">Procure por peças</h3>
                        <div class="custom-input-group">
                            <input class="input" type="text" name="Nome" required>
                            <div class="input-icon">
                                <button title="Clique para Pesquisar" type="submit">
                                    <em class="fas fa-search"></em>
                                </button>
                            </div>
                        </div>
                    }
                </div>
                @{
                    var prods = (List<Produto>)Model;
                }

                <div class="mb-5">
                    @if (prods.Count > 0)
                    {
                        <h6 class="font-light">resultados da pesquisa</h6>

                        <div class="products">

                            @foreach (var item in Model)
                            {
                                <!-- START Product Example Usage -->
                                <figure class="product">
                                    <img src="~/Content/images/tenis.jpg" class="img-fluid" alt="product">
                                    <figcaption class="product-body">
                                        <h4 class="product-name">@Html.DisplayFor(model => item.Nome)</h4>

                                        @{
                                            float preco = item.Preco;

                                            double parcela = (item.Preco / 10);
                                            parcela = Math.Truncate(parcela * 100) / 100;
                                        }
                                        <h5 class="product-price">R$@(preco)</h5>
                                        <h5 class="product-price">ou <small>10x</small> R$@(parcela)</h5>
                                        <div class="text-right">
                                            @if (user != null)
                                            {
                                                <a href="@Url.Action("Adicionar", "Carrinho", new { id = item.Id })" class="btn btn-sm btn-primary">
                                                    <em class="fas fa-shopping-cart"></em> Carrinho
                                                </a>
                                            }
                                            else
                                            {
                                                <a href="@Url.Action("Login", "Conta")" class="btn btn-sm btn-primary">
                                                    <em class="fas fa-shopping-cart"></em> Carrinho
                                                </a>
                                            }
                                            <br />
                                        </div>
                                    </figcaption>
                                </figure>
                                <!-- END Product Example Usage -->
                            }
                        </div>
                    }
                    else
                    {
                        <h6 class="font-light text-center">Nenhum resultado encontrado</h6>
                    }
                </div>
                </div>
        </div>
    </div>
</section>